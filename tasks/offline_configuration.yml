---
- name: ensure keystone is properly configured
  ini_file:
    dest: /etc/keystone/keystone.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: DEFAULT, 
        option: admin_token, value: "{{ keystone_admin_token }}" }
    - { section: DEFAULT, option: verbose, value: "{{ keystone_log_verbose }}" }
    - { section: DEFAULT, option: debug, value: "{{ keystone_log_debug }}" }
    - { section: DEFAULT, option: log_dir, value: "{{ keystone_log_dir }}" }
    - { section: database, option: connection,
        value: "mysql://keystone:{{ keystone_mysql_keystone_password }}@{{ 
                  keystone_mysql_host }}:{{ keystone_mysql_port }}/keystone" }
  register: modify_keystone_ini

- name: ensure keystone sqlite is deleted
  file:
    dest: /var/lib/keystone/keystone.sqlite
    state: absent

#- name: ensure keystone database is present
#  mysql_db:
#    login_host: "{{ keystone_mysql_host }}"
#    login_user: root
#    login_password: "{{ keystone_mysql_root_password }}"
#    name: keystone
#  register: create_keystone_db

#- name: ensure keystone database user is present
#  mysql_user:
#    login_host: "{{ keystone_mysql_host }}"
#    login_user: root
#    login_password: "{{ keystone_mysql_root_password }}"
#    name: keystone
#    host: "{{ item }}"
#    password: "{{ keystone_mysql_keystone_password }}"
#    priv: keystone.*:ALL
#  with_items:
#    - localhost
#    - "%"

- name: ensure database is synced
  command: /usr/bin/keystone-manage db_sync
  when: create_keystone_db|changed

- name: restart keystone
  service:
    name: keystone
    state: restarted
  when: modify_keystone_ini|changed and
        keystone_dockerize_context is not defined
