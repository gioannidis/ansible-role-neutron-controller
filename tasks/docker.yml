---
- name: ensure dockerfile directories exist
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    mode: 0700
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache"
    - "{{ ansible_env.PWD }}/.ansible_cache/docker"

- name: synchronize role to remote cache for Dockerfile build
  synchronize:
    src: ../
    dest: "{{ ansible_env.PWD }}/.ansible_cache/docker/glance"
    links: yes
    delete: yes

- name: ensure glance docker image has been built
  docker_image:
    name: "{{ glance_docker_username }}/glance"
    path: "{{ ansible_env.PWD }}/.ansible_cache/docker/glance"
    state: present

- name: ensure glance data container exists
  docker:
    image: "{{ glance_docker_username }}/{{ glance_docker_imagename }}"
    name: "{{ glance_docker_containername }}_data"
    command: >
      ansible-playbook -i inventories/local.ini deploy.yml -e '{ 
        "glance_dockerize_context" : "offline_configuration", 
        "glance_mysql_host" : "{{ glance_mysql_host }}",
        "glance_mysql_glance_password" : 
          "{{ glance_mysql_glance_password }}" }'
    detach: no
    state: present

- name: wait until offline configuration is completed
  command: docker wait "{{ glance_docker_containername }}_data"
  register: docker_wait
  changed_when: false
  failed_when: docker_wait.stdout != "0"

- name: ensure glance service is running
  docker:
    image: "{{ glance_docker_username }}/{{ glance_docker_imagename }}"
    name: "{{ glance_docker_containername }}_server"
    volumes_from: "{{ glance_docker_containername }}_data"
    ports: 
      - 5000:5000
      - 35357:35357
    detach: yes
    state: running

- name: perform glance docker online configuration
  docker:
    image: "{{ glance_docker_username }}/{{ glance_docker_imagename }}"
    name: "{{ glance_docker_containername }}_configure"
    volumes_from: "{{ glance_docker_containername }}_data"
    detach: no
    command: >
      ansible-playbook -i inventories/local.ini deploy.yml -e '{
        "glance_dockerize_context" : "online_configuration",
        "glance_keystone_admin_password" :
          "{{ glance_keystone_admin_password }}" }'
    state: present

- name: wait until online configuration is completed
  command: docker wait "{{ glance_docker_containername }}_configure"
  register: docker_wait
  changed_when: false
  failed_when: docker_wait.stdout != "0"

